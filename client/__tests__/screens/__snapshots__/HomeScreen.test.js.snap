// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen should render data after loading 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "UserDetails",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "getUserDetails",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "bio",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "profileImageLink",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 98,
              "start": 0,
            },
          },
        },
        "result": Object {
          "data": Object {
            "getUserDetails": Object {
              "bio": "Photographer",
              "id": 1,
              "name": "Byoung ho",
              "profileImageLink": "{\\"uri\\":\\"file:///storage/emulated/0/Pictures/image-60611026-7ced-499c-972a-fb945c72120f.jpg\\"}",
            },
          },
        },
      },
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "UpdateProfileMutation",
                },
                "operation": "mutation",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "profileImageLink",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "profileImageLink",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "addProfilePicture",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "directives": Array [],
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "profileImageLink",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 126,
              "start": 0,
            },
          },
          "variables": Object {
            "profileImageLink": "{\\"uri\\":\\"file:///storage/emulated/0/Pictures/image-820516d8-2143-4614-8c60-fb9862e6587a.jpg\\"}",
          },
        },
        "result": [Function],
      },
    ]
  }
>
  <HomeScreen
    navigation={
      Object {
        "navigate": [MockFunction],
      }
    }
  />
</MockedProvider>
`;
